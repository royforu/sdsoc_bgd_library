// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="a4_bgd_accel,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045-ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.321000,HLS_SYN_LAT=780219707,HLS_SYN_TPT=none,HLS_SYN_MEM=40,HLS_SYN_DSP=172,HLS_SYN_FF=34523,HLS_SYN_LUT=44680,HLS_VERSION=2019_1}" *)

module a4_bgd_accel (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        valData_TDATA,
        valData_TVALID,
        valData_TREADY,
        valWeight_TDATA,
        valWeight_TVALID,
        valWeight_TREADY,
        valGradient_TDATA,
        valGradient_TVALID,
        valGradient_TREADY
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_pp0_stage0 = 21'd2;
parameter    ap_ST_fsm_state4 = 21'd4;
parameter    ap_ST_fsm_state5 = 21'd8;
parameter    ap_ST_fsm_pp1_stage0 = 21'd16;
parameter    ap_ST_fsm_pp1_stage1 = 21'd32;
parameter    ap_ST_fsm_pp1_stage2 = 21'd64;
parameter    ap_ST_fsm_state10 = 21'd128;
parameter    ap_ST_fsm_state11 = 21'd256;
parameter    ap_ST_fsm_state12 = 21'd512;
parameter    ap_ST_fsm_state13 = 21'd1024;
parameter    ap_ST_fsm_state14 = 21'd2048;
parameter    ap_ST_fsm_state15 = 21'd4096;
parameter    ap_ST_fsm_state16 = 21'd8192;
parameter    ap_ST_fsm_state17 = 21'd16384;
parameter    ap_ST_fsm_state18 = 21'd32768;
parameter    ap_ST_fsm_state19 = 21'd65536;
parameter    ap_ST_fsm_state20 = 21'd131072;
parameter    ap_ST_fsm_state21 = 21'd262144;
parameter    ap_ST_fsm_pp2_stage0 = 21'd524288;
parameter    ap_ST_fsm_state26 = 21'd1048576;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] valData_TDATA;
input   valData_TVALID;
output   valData_TREADY;
input  [31:0] valWeight_TDATA;
input   valWeight_TVALID;
output   valWeight_TREADY;
output  [31:0] valGradient_TDATA;
output   valGradient_TVALID;
input   valGradient_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] valData_0_data_out;
wire    valData_0_vld_in;
wire    valData_0_vld_out;
wire    valData_0_ack_in;
reg    valData_0_ack_out;
reg   [31:0] valData_0_payload_A;
reg   [31:0] valData_0_payload_B;
reg    valData_0_sel_rd;
reg    valData_0_sel_wr;
wire    valData_0_sel;
wire    valData_0_load_A;
wire    valData_0_load_B;
reg   [1:0] valData_0_state;
wire    valData_0_state_cmp_full;
reg   [31:0] valWeight_0_data_out;
wire    valWeight_0_vld_in;
wire    valWeight_0_vld_out;
wire    valWeight_0_ack_in;
reg    valWeight_0_ack_out;
reg   [31:0] valWeight_0_payload_A;
reg   [31:0] valWeight_0_payload_B;
reg    valWeight_0_sel_rd;
reg    valWeight_0_sel_wr;
wire    valWeight_0_sel;
wire    valWeight_0_load_A;
wire    valWeight_0_load_B;
reg   [1:0] valWeight_0_state;
wire    valWeight_0_state_cmp_full;
reg   [31:0] valGradient_1_data_out;
reg    valGradient_1_vld_in;
wire    valGradient_1_vld_out;
wire    valGradient_1_ack_in;
wire    valGradient_1_ack_out;
reg   [31:0] valGradient_1_payload_A;
reg   [31:0] valGradient_1_payload_B;
reg    valGradient_1_sel_rd;
reg    valGradient_1_sel_wr;
wire    valGradient_1_sel;
wire    valGradient_1_load_A;
wire    valGradient_1_load_B;
reg   [1:0] valGradient_1_state;
wire    valGradient_1_state_cmp_full;
reg    valData_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] icmp_ln424_reg_799;
reg    valWeight_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln397_fu_453_p2;
reg    valGradient_TDATA_blk_n;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln461_reg_903;
reg   [0:0] icmp_ln461_reg_903_pp2_iter1_reg;
reg    ap_enable_reg_pp2_iter3;
reg   [0:0] icmp_ln461_reg_903_pp2_iter2_reg;
reg   [31:0] j_0_reg_282;
reg   [31:0] i_0_reg_293;
reg   [12:0] loop_0_reg_304;
reg   [31:0] j3_0_reg_326;
reg   [9:0] loop1_0_reg_337;
reg   [12:0] loop4_0_reg_360;
reg   [31:0] i5_0_reg_371;
reg   [31:0] j6_0_reg_382;
wire   [31:0] fltLabel_q0;
reg   [31:0] reg_444;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
reg   [0:0] icmp_ln397_reg_756;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [12:0] loop_fu_459_p2;
wire   [13:0] trunc_ln401_fu_485_p1;
reg   [13:0] trunc_ln401_reg_765;
wire   [31:0] select_ln401_1_fu_489_p3;
reg   [31:0] select_ln401_1_reg_770;
wire  signed [13:0] trunc_ln409_fu_497_p1;
reg  signed [13:0] trunc_ln409_reg_775;
reg   [31:0] valWeight_read_reg_780;
wire   [31:0] j_fu_501_p2;
wire   [0:0] icmp_ln421_fu_512_p2;
wire    ap_CS_fsm_state5;
wire   [11:0] ch_fu_518_p2;
reg   [11:0] ch_reg_794;
wire   [0:0] icmp_ln424_fu_524_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [9:0] loop_2_fu_530_p2;
reg   [9:0] loop_2_reg_803;
wire   [31:0] select_ln430_fu_542_p3;
reg   [31:0] select_ln430_reg_808;
wire   [10:0] trunc_ln435_fu_550_p1;
reg   [10:0] trunc_ln435_reg_815;
reg   [31:0] valData_read_reg_820;
reg    ap_block_state7_pp1_stage1_iter0;
reg    ap_block_pp1_stage1_11001;
wire   [0:0] icmp_ln436_fu_554_p2;
reg   [0:0] icmp_ln436_reg_826;
wire   [10:0] add_ln439_fu_559_p2;
reg   [10:0] add_ln439_reg_830;
wire   [11:0] zext_ln439_2_fu_569_p1;
reg   [11:0] zext_ln439_2_reg_835;
wire   [12:0] zext_ln439_1_fu_584_p1;
reg   [12:0] zext_ln439_1_reg_840;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state8_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [31:0] j_2_fu_608_p2;
reg   [31:0] j_2_reg_845;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln448_fu_628_p2;
wire   [3:0] add_ln451_fu_634_p2;
reg   [3:0] add_ln451_reg_858;
wire    ap_CS_fsm_state13;
wire    grp_bgd_func0_fu_433_ap_ready;
wire    grp_bgd_func0_fu_433_ap_done;
wire   [3:0] add_ln453_fu_645_p2;
reg   [3:0] add_ln453_reg_868;
wire    ap_CS_fsm_state15;
wire    grp_bgd_func1_fu_423_ap_ready;
wire    grp_bgd_func1_fu_423_ap_done;
wire   [3:0] add_ln454_fu_656_p2;
reg   [3:0] add_ln454_reg_878;
wire    ap_CS_fsm_state17;
wire    grp_bgd_func2_fu_403_ap_ready;
wire    grp_bgd_func2_fu_403_ap_done;
wire   [3:0] add_ln455_fu_667_p2;
reg   [3:0] add_ln455_reg_888;
wire    ap_CS_fsm_state19;
wire    grp_bgd_func3_fu_413_ap_ready;
wire    grp_bgd_func3_fu_413_ap_done;
wire   [3:0] cla_fu_678_p2;
reg   [3:0] cla_reg_898;
wire   [0:0] icmp_ln461_fu_684_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state22_pp2_stage0_iter0;
wire    ap_block_state23_pp2_stage0_iter1;
wire    ap_block_state24_pp2_stage0_iter2;
reg    ap_block_state24_io;
wire    ap_block_state25_pp2_stage0_iter3;
reg    ap_block_state25_io;
reg    ap_block_pp2_stage0_11001;
wire   [12:0] loop_1_fu_690_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [31:0] select_ln465_fu_708_p3;
reg   [31:0] select_ln465_reg_912;
wire  signed [13:0] trunc_ln472_fu_716_p1;
reg  signed [13:0] trunc_ln472_reg_917;
wire   [13:0] trunc_ln472_1_fu_728_p1;
reg   [13:0] trunc_ln472_1_reg_922;
wire   [31:0] j_1_fu_732_p2;
wire   [31:0] fltGradient_q0;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage2_subdone;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state22;
reg    ap_enable_reg_pp2_iter1;
reg   [11:0] fltData_address0;
reg    fltData_ce0;
reg    fltData_we0;
reg   [31:0] fltData_d0;
wire   [31:0] fltData_q0;
reg   [11:0] fltData_address1;
reg    fltData_ce1;
reg    fltData_we1;
reg   [31:0] fltData_d1;
reg   [3:0] fltLabel_address0;
reg    fltLabel_ce0;
reg    fltLabel_we0;
reg   [12:0] fltWeight_address0;
reg    fltWeight_ce0;
reg    fltWeight_we0;
wire   [31:0] fltWeight_q0;
reg   [12:0] fltGradient_address0;
reg    fltGradient_ce0;
reg    fltGradient_we0;
reg   [31:0] fltGradient_d0;
wire    grp_bgd_func4_fu_393_ap_start;
wire    grp_bgd_func4_fu_393_ap_done;
wire    grp_bgd_func4_fu_393_ap_idle;
wire    grp_bgd_func4_fu_393_ap_ready;
wire   [12:0] grp_bgd_func4_fu_393_pfltWeight_address0;
wire    grp_bgd_func4_fu_393_pfltWeight_ce0;
wire   [11:0] grp_bgd_func4_fu_393_pfltData_address0;
wire    grp_bgd_func4_fu_393_pfltData_ce0;
wire   [12:0] grp_bgd_func4_fu_393_pfltGradient_address0;
wire    grp_bgd_func4_fu_393_pfltGradient_ce0;
wire    grp_bgd_func4_fu_393_pfltGradient_we0;
wire   [31:0] grp_bgd_func4_fu_393_pfltGradient_d0;
wire    grp_bgd_func2_fu_403_ap_start;
wire    grp_bgd_func2_fu_403_ap_idle;
wire   [12:0] grp_bgd_func2_fu_403_pfltWeight_address0;
wire    grp_bgd_func2_fu_403_pfltWeight_ce0;
wire   [11:0] grp_bgd_func2_fu_403_pfltData_address0;
wire    grp_bgd_func2_fu_403_pfltData_ce0;
wire   [12:0] grp_bgd_func2_fu_403_pfltGradient_address0;
wire    grp_bgd_func2_fu_403_pfltGradient_ce0;
wire    grp_bgd_func2_fu_403_pfltGradient_we0;
wire   [31:0] grp_bgd_func2_fu_403_pfltGradient_d0;
wire    grp_bgd_func3_fu_413_ap_start;
wire    grp_bgd_func3_fu_413_ap_idle;
wire   [12:0] grp_bgd_func3_fu_413_pfltWeight_address0;
wire    grp_bgd_func3_fu_413_pfltWeight_ce0;
wire   [11:0] grp_bgd_func3_fu_413_pfltData_address0;
wire    grp_bgd_func3_fu_413_pfltData_ce0;
wire   [12:0] grp_bgd_func3_fu_413_pfltGradient_address0;
wire    grp_bgd_func3_fu_413_pfltGradient_ce0;
wire    grp_bgd_func3_fu_413_pfltGradient_we0;
wire   [31:0] grp_bgd_func3_fu_413_pfltGradient_d0;
wire    grp_bgd_func1_fu_423_ap_start;
wire    grp_bgd_func1_fu_423_ap_idle;
wire   [12:0] grp_bgd_func1_fu_423_pfltWeight_address0;
wire    grp_bgd_func1_fu_423_pfltWeight_ce0;
wire   [11:0] grp_bgd_func1_fu_423_pfltData_address0;
wire    grp_bgd_func1_fu_423_pfltData_ce0;
wire   [12:0] grp_bgd_func1_fu_423_pfltGradient_address0;
wire    grp_bgd_func1_fu_423_pfltGradient_ce0;
wire    grp_bgd_func1_fu_423_pfltGradient_we0;
wire   [31:0] grp_bgd_func1_fu_423_pfltGradient_d0;
wire    grp_bgd_func0_fu_433_ap_start;
wire    grp_bgd_func0_fu_433_ap_idle;
wire   [12:0] grp_bgd_func0_fu_433_pfltWeight_address0;
wire    grp_bgd_func0_fu_433_pfltWeight_ce0;
wire   [11:0] grp_bgd_func0_fu_433_pfltData_address0;
wire    grp_bgd_func0_fu_433_pfltData_ce0;
wire   [12:0] grp_bgd_func0_fu_433_pfltGradient_address0;
wire    grp_bgd_func0_fu_433_pfltGradient_ce0;
wire    grp_bgd_func0_fu_433_pfltGradient_we0;
wire   [31:0] grp_bgd_func0_fu_433_pfltGradient_d0;
reg   [31:0] ap_phi_mux_i_0_phi_fu_297_p4;
reg   [11:0] ch_0_reg_315;
wire    ap_CS_fsm_state4;
reg   [31:0] ap_phi_mux_j3_0_phi_fu_330_p4;
wire    ap_block_pp1_stage0;
reg   [9:0] ap_phi_mux_loop1_0_phi_fu_341_p4;
reg   [3:0] cla_0_reg_348;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state10;
reg   [31:0] ap_phi_mux_i5_0_phi_fu_375_p4;
reg    grp_bgd_func4_fu_393_ap_start_reg;
reg    grp_bgd_func2_fu_403_ap_start_reg;
reg    grp_bgd_func3_fu_413_ap_start_reg;
reg    grp_bgd_func1_fu_423_ap_start_reg;
reg    grp_bgd_func0_fu_433_ap_start_reg;
wire   [31:0] zext_ln409_fu_507_p1;
wire   [31:0] zext_ln439_fu_564_p1;
wire   [31:0] zext_ln439_3_fu_579_p1;
wire   [31:0] zext_ln439_4_fu_592_p1;
wire    ap_block_pp1_stage2;
wire  signed [31:0] sext_ln439_fu_603_p1;
wire  signed [31:0] sext_ln439_1_fu_618_p1;
wire   [31:0] zext_ln448_fu_623_p1;
wire   [31:0] zext_ln451_fu_640_p1;
wire   [31:0] zext_ln453_fu_651_p1;
wire   [31:0] zext_ln454_fu_662_p1;
wire   [31:0] zext_ln455_fu_673_p1;
wire   [31:0] zext_ln472_fu_738_p1;
wire    ap_block_pp2_stage0_01001;
wire   [0:0] icmp_ln401_fu_465_p2;
wire   [31:0] select_ln401_fu_477_p3;
wire   [31:0] i_fu_471_p2;
wire  signed [13:0] grp_fu_742_p3;
wire   [0:0] icmp_ln430_fu_536_p2;
wire   [11:0] add_ln439_1_fu_573_p2;
wire   [11:0] add_ln439_2_fu_587_p2;
wire   [12:0] add_ln439_3_fu_597_p2;
wire   [12:0] add_ln439_4_fu_613_p2;
wire   [0:0] icmp_ln465_fu_696_p2;
wire   [31:0] i_1_fu_702_p2;
wire   [31:0] select_ln465_1_fu_720_p3;
wire  signed [13:0] grp_fu_749_p3;
wire   [10:0] grp_fu_742_p0;
wire   [10:0] grp_fu_749_p0;
wire    ap_CS_fsm_state26;
reg    ap_block_state26;
reg   [20:0] ap_NS_fsm;
reg    ap_block_pp1_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 valData_0_sel_rd = 1'b0;
#0 valData_0_sel_wr = 1'b0;
#0 valData_0_state = 2'd0;
#0 valWeight_0_sel_rd = 1'b0;
#0 valWeight_0_sel_wr = 1'b0;
#0 valWeight_0_state = 2'd0;
#0 valGradient_1_sel_rd = 1'b0;
#0 valGradient_1_sel_wr = 1'b0;
#0 valGradient_1_state = 2'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 grp_bgd_func4_fu_393_ap_start_reg = 1'b0;
#0 grp_bgd_func2_fu_403_ap_start_reg = 1'b0;
#0 grp_bgd_func3_fu_413_ap_start_reg = 1'b0;
#0 grp_bgd_func1_fu_423_ap_start_reg = 1'b0;
#0 grp_bgd_func0_fu_433_ap_start_reg = 1'b0;
end

a4_bgd_accel_fltData #(
    .DataWidth( 32 ),
    .AddressRange( 3925 ),
    .AddressWidth( 12 ))
fltData_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fltData_address0),
    .ce0(fltData_ce0),
    .we0(fltData_we0),
    .d0(fltData_d0),
    .q0(fltData_q0),
    .address1(fltData_address1),
    .ce1(fltData_ce1),
    .we1(fltData_we1),
    .d1(fltData_d1)
);

a4_bgd_accel_fltLabel #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
fltLabel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fltLabel_address0),
    .ce0(fltLabel_ce0),
    .we0(fltLabel_we0),
    .d0(valData_0_data_out),
    .q0(fltLabel_q0)
);

a4_bgd_accel_fltWeight #(
    .DataWidth( 32 ),
    .AddressRange( 7850 ),
    .AddressWidth( 13 ))
fltWeight_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fltWeight_address0),
    .ce0(fltWeight_ce0),
    .we0(fltWeight_we0),
    .d0(valWeight_read_reg_780),
    .q0(fltWeight_q0)
);

a4_bgd_accel_fltWeight #(
    .DataWidth( 32 ),
    .AddressRange( 7850 ),
    .AddressWidth( 13 ))
fltGradient_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fltGradient_address0),
    .ce0(fltGradient_ce0),
    .we0(fltGradient_we0),
    .d0(fltGradient_d0),
    .q0(fltGradient_q0)
);

a4_bgd_func4 grp_bgd_func4_fu_393(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_bgd_func4_fu_393_ap_start),
    .ap_done(grp_bgd_func4_fu_393_ap_done),
    .ap_idle(grp_bgd_func4_fu_393_ap_idle),
    .ap_ready(grp_bgd_func4_fu_393_ap_ready),
    .vfltLabel(reg_444),
    .pfltWeight_address0(grp_bgd_func4_fu_393_pfltWeight_address0),
    .pfltWeight_ce0(grp_bgd_func4_fu_393_pfltWeight_ce0),
    .pfltWeight_q0(fltWeight_q0),
    .pfltWeight_offset(add_ln455_reg_888),
    .pfltData_address0(grp_bgd_func4_fu_393_pfltData_address0),
    .pfltData_ce0(grp_bgd_func4_fu_393_pfltData_ce0),
    .pfltData_q0(fltData_q0),
    .pfltGradient_address0(grp_bgd_func4_fu_393_pfltGradient_address0),
    .pfltGradient_ce0(grp_bgd_func4_fu_393_pfltGradient_ce0),
    .pfltGradient_we0(grp_bgd_func4_fu_393_pfltGradient_we0),
    .pfltGradient_d0(grp_bgd_func4_fu_393_pfltGradient_d0),
    .pfltGradient_q0(fltGradient_q0)
);

a4_bgd_func2 grp_bgd_func2_fu_403(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_bgd_func2_fu_403_ap_start),
    .ap_done(grp_bgd_func2_fu_403_ap_done),
    .ap_idle(grp_bgd_func2_fu_403_ap_idle),
    .ap_ready(grp_bgd_func2_fu_403_ap_ready),
    .vfltLabel(reg_444),
    .pfltWeight_address0(grp_bgd_func2_fu_403_pfltWeight_address0),
    .pfltWeight_ce0(grp_bgd_func2_fu_403_pfltWeight_ce0),
    .pfltWeight_q0(fltWeight_q0),
    .pfltWeight_offset(add_ln453_reg_868),
    .pfltData_address0(grp_bgd_func2_fu_403_pfltData_address0),
    .pfltData_ce0(grp_bgd_func2_fu_403_pfltData_ce0),
    .pfltData_q0(fltData_q0),
    .pfltGradient_address0(grp_bgd_func2_fu_403_pfltGradient_address0),
    .pfltGradient_ce0(grp_bgd_func2_fu_403_pfltGradient_ce0),
    .pfltGradient_we0(grp_bgd_func2_fu_403_pfltGradient_we0),
    .pfltGradient_d0(grp_bgd_func2_fu_403_pfltGradient_d0),
    .pfltGradient_q0(fltGradient_q0)
);

a4_bgd_func3 grp_bgd_func3_fu_413(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_bgd_func3_fu_413_ap_start),
    .ap_done(grp_bgd_func3_fu_413_ap_done),
    .ap_idle(grp_bgd_func3_fu_413_ap_idle),
    .ap_ready(grp_bgd_func3_fu_413_ap_ready),
    .vfltLabel(reg_444),
    .pfltWeight_address0(grp_bgd_func3_fu_413_pfltWeight_address0),
    .pfltWeight_ce0(grp_bgd_func3_fu_413_pfltWeight_ce0),
    .pfltWeight_q0(fltWeight_q0),
    .pfltWeight_offset(add_ln454_reg_878),
    .pfltData_address0(grp_bgd_func3_fu_413_pfltData_address0),
    .pfltData_ce0(grp_bgd_func3_fu_413_pfltData_ce0),
    .pfltData_q0(fltData_q0),
    .pfltGradient_address0(grp_bgd_func3_fu_413_pfltGradient_address0),
    .pfltGradient_ce0(grp_bgd_func3_fu_413_pfltGradient_ce0),
    .pfltGradient_we0(grp_bgd_func3_fu_413_pfltGradient_we0),
    .pfltGradient_d0(grp_bgd_func3_fu_413_pfltGradient_d0),
    .pfltGradient_q0(fltGradient_q0)
);

a4_bgd_func1 grp_bgd_func1_fu_423(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_bgd_func1_fu_423_ap_start),
    .ap_done(grp_bgd_func1_fu_423_ap_done),
    .ap_idle(grp_bgd_func1_fu_423_ap_idle),
    .ap_ready(grp_bgd_func1_fu_423_ap_ready),
    .vfltLabel(reg_444),
    .pfltWeight_address0(grp_bgd_func1_fu_423_pfltWeight_address0),
    .pfltWeight_ce0(grp_bgd_func1_fu_423_pfltWeight_ce0),
    .pfltWeight_q0(fltWeight_q0),
    .pfltWeight_offset(add_ln451_reg_858),
    .pfltData_address0(grp_bgd_func1_fu_423_pfltData_address0),
    .pfltData_ce0(grp_bgd_func1_fu_423_pfltData_ce0),
    .pfltData_q0(fltData_q0),
    .pfltGradient_address0(grp_bgd_func1_fu_423_pfltGradient_address0),
    .pfltGradient_ce0(grp_bgd_func1_fu_423_pfltGradient_ce0),
    .pfltGradient_we0(grp_bgd_func1_fu_423_pfltGradient_we0),
    .pfltGradient_d0(grp_bgd_func1_fu_423_pfltGradient_d0),
    .pfltGradient_q0(fltGradient_q0)
);

a4_bgd_func0 grp_bgd_func0_fu_433(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_bgd_func0_fu_433_ap_start),
    .ap_done(grp_bgd_func0_fu_433_ap_done),
    .ap_idle(grp_bgd_func0_fu_433_ap_idle),
    .ap_ready(grp_bgd_func0_fu_433_ap_ready),
    .vfltLabel(reg_444),
    .pfltWeight_address0(grp_bgd_func0_fu_433_pfltWeight_address0),
    .pfltWeight_ce0(grp_bgd_func0_fu_433_pfltWeight_ce0),
    .pfltWeight_q0(fltWeight_q0),
    .pfltWeight_offset(cla_0_reg_348),
    .pfltData_address0(grp_bgd_func0_fu_433_pfltData_address0),
    .pfltData_ce0(grp_bgd_func0_fu_433_pfltData_ce0),
    .pfltData_q0(fltData_q0),
    .pfltGradient_address0(grp_bgd_func0_fu_433_pfltGradient_address0),
    .pfltGradient_ce0(grp_bgd_func0_fu_433_pfltGradient_ce0),
    .pfltGradient_we0(grp_bgd_func0_fu_433_pfltGradient_we0),
    .pfltGradient_d0(grp_bgd_func0_fu_433_pfltGradient_d0),
    .pfltGradient_q0(fltGradient_q0)
);

a4_bgd_accel_mac_muladd_11ns_14s_14ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
bgd_accel_mac_muladd_11ns_14s_14ns_14_1_1_U69(
    .din0(grp_fu_742_p0),
    .din1(trunc_ln409_reg_775),
    .din2(trunc_ln401_reg_765),
    .dout(grp_fu_742_p3)
);

a4_bgd_accel_mac_muladd_11ns_14s_14ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
bgd_accel_mac_muladd_11ns_14s_14ns_14_1_1_U70(
    .din0(grp_fu_749_p0),
    .din1(trunc_ln472_reg_917),
    .din2(trunc_ln472_1_reg_922),
    .dout(grp_fu_749_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln421_fu_512_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln421_fu_512_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state22) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln421_fu_512_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state22)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state22);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if (((icmp_ln421_fu_512_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_bgd_func0_fu_433_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_bgd_func0_fu_433_ap_start_reg <= 1'b1;
        end else if ((grp_bgd_func0_fu_433_ap_ready == 1'b1)) begin
            grp_bgd_func0_fu_433_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_bgd_func1_fu_423_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_bgd_func1_fu_423_ap_start_reg <= 1'b1;
        end else if ((grp_bgd_func1_fu_423_ap_ready == 1'b1)) begin
            grp_bgd_func1_fu_423_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_bgd_func2_fu_403_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_bgd_func2_fu_403_ap_start_reg <= 1'b1;
        end else if ((grp_bgd_func2_fu_403_ap_ready == 1'b1)) begin
            grp_bgd_func2_fu_403_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_bgd_func3_fu_413_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_bgd_func3_fu_413_ap_start_reg <= 1'b1;
        end else if ((grp_bgd_func3_fu_413_ap_ready == 1'b1)) begin
            grp_bgd_func3_fu_413_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_bgd_func4_fu_393_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            grp_bgd_func4_fu_393_ap_start_reg <= 1'b1;
        end else if ((grp_bgd_func4_fu_393_ap_ready == 1'b1)) begin
            grp_bgd_func4_fu_393_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        valData_0_sel_rd <= 1'b0;
    end else begin
        if (((valData_0_ack_out == 1'b1) & (valData_0_vld_out == 1'b1))) begin
            valData_0_sel_rd <= ~valData_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        valData_0_sel_wr <= 1'b0;
    end else begin
        if (((valData_0_ack_in == 1'b1) & (valData_0_vld_in == 1'b1))) begin
            valData_0_sel_wr <= ~valData_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        valData_0_state <= 2'd0;
    end else begin
        if ((((valData_0_state == 2'd2) & (valData_0_vld_in == 1'b0)) | ((valData_0_state == 2'd3) & (valData_0_vld_in == 1'b0) & (valData_0_ack_out == 1'b1)))) begin
            valData_0_state <= 2'd2;
        end else if ((((valData_0_state == 2'd1) & (valData_0_ack_out == 1'b0)) | ((valData_0_state == 2'd3) & (valData_0_ack_out == 1'b0) & (valData_0_vld_in == 1'b1)))) begin
            valData_0_state <= 2'd1;
        end else if (((~((valData_0_vld_in == 1'b0) & (valData_0_ack_out == 1'b1)) & ~((valData_0_ack_out == 1'b0) & (valData_0_vld_in == 1'b1)) & (valData_0_state == 2'd3)) | ((valData_0_state == 2'd1) & (valData_0_ack_out == 1'b1)) | ((valData_0_state == 2'd2) & (valData_0_vld_in == 1'b1)))) begin
            valData_0_state <= 2'd3;
        end else begin
            valData_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        valGradient_1_sel_rd <= 1'b0;
    end else begin
        if (((valGradient_1_ack_out == 1'b1) & (valGradient_1_vld_out == 1'b1))) begin
            valGradient_1_sel_rd <= ~valGradient_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        valGradient_1_sel_wr <= 1'b0;
    end else begin
        if (((valGradient_1_ack_in == 1'b1) & (valGradient_1_vld_in == 1'b1))) begin
            valGradient_1_sel_wr <= ~valGradient_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        valGradient_1_state <= 2'd0;
    end else begin
        if ((((valGradient_1_state == 2'd2) & (valGradient_1_vld_in == 1'b0)) | ((valGradient_1_state == 2'd3) & (valGradient_1_vld_in == 1'b0) & (valGradient_1_ack_out == 1'b1)))) begin
            valGradient_1_state <= 2'd2;
        end else if ((((valGradient_1_state == 2'd1) & (valGradient_TREADY == 1'b0)) | ((valGradient_1_state == 2'd3) & (valGradient_TREADY == 1'b0) & (valGradient_1_vld_in == 1'b1)))) begin
            valGradient_1_state <= 2'd1;
        end else if (((~((valGradient_1_vld_in == 1'b0) & (valGradient_1_ack_out == 1'b1)) & ~((valGradient_TREADY == 1'b0) & (valGradient_1_vld_in == 1'b1)) & (valGradient_1_state == 2'd3)) | ((valGradient_1_state == 2'd1) & (valGradient_1_ack_out == 1'b1)) | ((valGradient_1_state == 2'd2) & (valGradient_1_vld_in == 1'b1)))) begin
            valGradient_1_state <= 2'd3;
        end else begin
            valGradient_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        valWeight_0_sel_rd <= 1'b0;
    end else begin
        if (((valWeight_0_ack_out == 1'b1) & (valWeight_0_vld_out == 1'b1))) begin
            valWeight_0_sel_rd <= ~valWeight_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        valWeight_0_sel_wr <= 1'b0;
    end else begin
        if (((valWeight_0_ack_in == 1'b1) & (valWeight_0_vld_in == 1'b1))) begin
            valWeight_0_sel_wr <= ~valWeight_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        valWeight_0_state <= 2'd0;
    end else begin
        if ((((valWeight_0_state == 2'd2) & (valWeight_0_vld_in == 1'b0)) | ((valWeight_0_state == 2'd3) & (valWeight_0_vld_in == 1'b0) & (valWeight_0_ack_out == 1'b1)))) begin
            valWeight_0_state <= 2'd2;
        end else if ((((valWeight_0_state == 2'd1) & (valWeight_0_ack_out == 1'b0)) | ((valWeight_0_state == 2'd3) & (valWeight_0_ack_out == 1'b0) & (valWeight_0_vld_in == 1'b1)))) begin
            valWeight_0_state <= 2'd1;
        end else if (((~((valWeight_0_vld_in == 1'b0) & (valWeight_0_ack_out == 1'b1)) & ~((valWeight_0_ack_out == 1'b0) & (valWeight_0_vld_in == 1'b1)) & (valWeight_0_state == 2'd3)) | ((valWeight_0_state == 2'd1) & (valWeight_0_ack_out == 1'b1)) | ((valWeight_0_state == 2'd2) & (valWeight_0_vld_in == 1'b1)))) begin
            valWeight_0_state <= 2'd3;
        end else begin
            valWeight_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ch_0_reg_315 <= 12'd0;
    end else if (((icmp_ln448_fu_628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        ch_0_reg_315 <= ch_reg_794;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cla_0_reg_348 <= 4'd0;
    end else if (((grp_bgd_func4_fu_393_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        cla_0_reg_348 <= cla_reg_898;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln421_fu_512_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        i5_0_reg_371 <= 32'd0;
    end else if (((icmp_ln461_reg_903 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i5_0_reg_371 <= select_ln465_reg_912;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_reg_756 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_293 <= select_ln401_1_reg_770;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_293 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j3_0_reg_326 <= j_2_reg_845;
    end else if (((icmp_ln421_fu_512_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j3_0_reg_326 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln421_fu_512_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        j6_0_reg_382 <= 32'd0;
    end else if (((icmp_ln461_fu_684_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j6_0_reg_382 <= j_1_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_fu_453_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_0_reg_282 <= j_fu_501_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_reg_282 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        loop1_0_reg_337 <= loop_2_reg_803;
    end else if (((icmp_ln421_fu_512_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        loop1_0_reg_337 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln421_fu_512_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        loop4_0_reg_360 <= 13'd0;
    end else if (((icmp_ln461_fu_684_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        loop4_0_reg_360 <= loop_1_fu_690_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_fu_453_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        loop_0_reg_304 <= loop_fu_459_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        loop_0_reg_304 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln436_fu_554_p2 == 1'd1) & (icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        add_ln439_reg_830 <= add_ln439_fu_559_p2;
        zext_ln439_2_reg_835[10 : 0] <= zext_ln439_2_fu_569_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_bgd_func0_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        add_ln451_reg_858 <= add_ln451_fu_634_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_bgd_func1_fu_423_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln453_reg_868 <= add_ln453_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_bgd_func2_fu_403_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        add_ln454_reg_878 <= add_ln454_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_bgd_func3_fu_413_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        add_ln455_reg_888 <= add_ln455_fu_667_p2;
        cla_reg_898 <= cla_fu_678_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ch_reg_794 <= ch_fu_518_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln397_reg_756 <= icmp_ln397_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln424_reg_799 <= icmp_ln424_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        icmp_ln436_reg_826 <= icmp_ln436_fu_554_p2;
        valData_read_reg_820 <= valData_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln461_reg_903 <= icmp_ln461_fu_684_p2;
        icmp_ln461_reg_903_pp2_iter1_reg <= icmp_ln461_reg_903;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln461_reg_903_pp2_iter2_reg <= icmp_ln461_reg_903_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        j_2_reg_845 <= j_2_fu_608_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        loop_2_reg_803 <= loop_2_fu_530_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_444 <= fltLabel_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_fu_453_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln401_1_reg_770 <= select_ln401_1_fu_489_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln424_fu_524_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln430_reg_808 <= select_ln430_fu_542_p3;
        trunc_ln435_reg_815 <= trunc_ln435_fu_550_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln461_fu_684_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln465_reg_912 <= select_ln465_fu_708_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln397_fu_453_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln401_reg_765 <= trunc_ln401_fu_485_p1;
        trunc_ln409_reg_775 <= trunc_ln409_fu_497_p1;
        valWeight_read_reg_780 <= valWeight_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln461_fu_684_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        trunc_ln472_1_reg_922 <= trunc_ln472_1_fu_728_p1;
        trunc_ln472_reg_917 <= trunc_ln472_fu_716_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((valData_0_load_A == 1'b1)) begin
        valData_0_payload_A <= valData_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((valData_0_load_B == 1'b1)) begin
        valData_0_payload_B <= valData_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((valGradient_1_load_A == 1'b1)) begin
        valGradient_1_payload_A <= fltGradient_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((valGradient_1_load_B == 1'b1)) begin
        valGradient_1_payload_B <= fltGradient_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((valWeight_0_load_A == 1'b1)) begin
        valWeight_0_payload_A <= valWeight_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((valWeight_0_load_B == 1'b1)) begin
        valWeight_0_payload_B <= valWeight_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln436_reg_826 == 1'd1) & (icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        zext_ln439_1_reg_840[10 : 0] <= zext_ln439_1_fu_584_p1[10 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln397_fu_453_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln424_fu_524_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln461_fu_684_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if ((~((valGradient_1_state == 2'd1) | ((valGradient_1_state == 2'd3) & (valGradient_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state26))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln461_reg_903 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i5_0_phi_fu_375_p4 = select_ln465_reg_912;
    end else begin
        ap_phi_mux_i5_0_phi_fu_375_p4 = i5_0_reg_371;
    end
end

always @ (*) begin
    if (((icmp_ln397_reg_756 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_297_p4 = select_ln401_1_reg_770;
    end else begin
        ap_phi_mux_i_0_phi_fu_297_p4 = i_0_reg_293;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln424_reg_799 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_j3_0_phi_fu_330_p4 = j_2_reg_845;
    end else begin
        ap_phi_mux_j3_0_phi_fu_330_p4 = j3_0_reg_326;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln424_reg_799 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_loop1_0_phi_fu_341_p4 = loop_2_reg_803;
    end else begin
        ap_phi_mux_loop1_0_phi_fu_341_p4 = loop1_0_reg_337;
    end
end

always @ (*) begin
    if ((~((valGradient_1_state == 2'd1) | ((valGradient_1_state == 2'd3) & (valGradient_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state26))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        fltData_address0 = sext_ln439_1_fu_618_p1;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        fltData_address0 = sext_ln439_fu_603_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        fltData_address0 = zext_ln439_fu_564_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fltData_address0 = grp_bgd_func0_fu_433_pfltData_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fltData_address0 = grp_bgd_func1_fu_423_pfltData_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fltData_address0 = grp_bgd_func3_fu_413_pfltData_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        fltData_address0 = grp_bgd_func2_fu_403_pfltData_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        fltData_address0 = grp_bgd_func4_fu_393_pfltData_address0;
    end else begin
        fltData_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            fltData_address1 = zext_ln439_4_fu_592_p1;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            fltData_address1 = zext_ln439_3_fu_579_p1;
        end else begin
            fltData_address1 = 'bx;
        end
    end else begin
        fltData_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        fltData_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fltData_ce0 = grp_bgd_func0_fu_433_pfltData_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fltData_ce0 = grp_bgd_func1_fu_423_pfltData_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fltData_ce0 = grp_bgd_func3_fu_413_pfltData_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        fltData_ce0 = grp_bgd_func2_fu_403_pfltData_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        fltData_ce0 = grp_bgd_func4_fu_393_pfltData_ce0;
    end else begin
        fltData_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        fltData_ce1 = 1'b1;
    end else begin
        fltData_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        fltData_d0 = valData_read_reg_820;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        fltData_d0 = valData_0_data_out;
    end else begin
        fltData_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            fltData_d1 = valData_read_reg_820;
        end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            fltData_d1 = valData_0_data_out;
        end else begin
            fltData_d1 = 'bx;
        end
    end else begin
        fltData_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln436_reg_826 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln436_reg_826 == 1'd1) & (icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((icmp_ln436_fu_554_p2 == 1'd1) & (icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        fltData_we0 = 1'b1;
    end else begin
        fltData_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln436_reg_826 == 1'd1) & (icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((icmp_ln436_fu_554_p2 == 1'd1) & (icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        fltData_we1 = 1'b1;
    end else begin
        fltData_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        fltGradient_address0 = zext_ln472_fu_738_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fltGradient_address0 = zext_ln409_fu_507_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fltGradient_address0 = grp_bgd_func0_fu_433_pfltGradient_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fltGradient_address0 = grp_bgd_func1_fu_423_pfltGradient_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fltGradient_address0 = grp_bgd_func3_fu_413_pfltGradient_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        fltGradient_address0 = grp_bgd_func2_fu_403_pfltGradient_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        fltGradient_address0 = grp_bgd_func4_fu_393_pfltGradient_address0;
    end else begin
        fltGradient_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        fltGradient_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fltGradient_ce0 = grp_bgd_func0_fu_433_pfltGradient_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fltGradient_ce0 = grp_bgd_func1_fu_423_pfltGradient_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fltGradient_ce0 = grp_bgd_func3_fu_413_pfltGradient_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        fltGradient_ce0 = grp_bgd_func2_fu_403_pfltGradient_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        fltGradient_ce0 = grp_bgd_func4_fu_393_pfltGradient_ce0;
    end else begin
        fltGradient_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fltGradient_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fltGradient_d0 = grp_bgd_func0_fu_433_pfltGradient_d0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fltGradient_d0 = grp_bgd_func1_fu_423_pfltGradient_d0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fltGradient_d0 = grp_bgd_func3_fu_413_pfltGradient_d0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        fltGradient_d0 = grp_bgd_func2_fu_403_pfltGradient_d0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        fltGradient_d0 = grp_bgd_func4_fu_393_pfltGradient_d0;
    end else begin
        fltGradient_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln397_reg_756 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fltGradient_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fltGradient_we0 = grp_bgd_func0_fu_433_pfltGradient_we0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fltGradient_we0 = grp_bgd_func1_fu_423_pfltGradient_we0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fltGradient_we0 = grp_bgd_func3_fu_413_pfltGradient_we0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        fltGradient_we0 = grp_bgd_func2_fu_403_pfltGradient_we0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        fltGradient_we0 = grp_bgd_func4_fu_393_pfltGradient_we0;
    end else begin
        fltGradient_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        fltLabel_address0 = zext_ln455_fu_673_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        fltLabel_address0 = zext_ln454_fu_662_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fltLabel_address0 = zext_ln453_fu_651_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fltLabel_address0 = zext_ln451_fu_640_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fltLabel_address0 = zext_ln448_fu_623_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        fltLabel_address0 = select_ln430_reg_808;
    end else begin
        fltLabel_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((grp_bgd_func3_fu_413_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((grp_bgd_func2_fu_403_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((grp_bgd_func1_fu_423_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((grp_bgd_func0_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        fltLabel_ce0 = 1'b1;
    end else begin
        fltLabel_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln436_fu_554_p2 == 1'd0) & (icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        fltLabel_we0 = 1'b1;
    end else begin
        fltLabel_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fltWeight_address0 = zext_ln409_fu_507_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fltWeight_address0 = grp_bgd_func0_fu_433_pfltWeight_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fltWeight_address0 = grp_bgd_func1_fu_423_pfltWeight_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fltWeight_address0 = grp_bgd_func3_fu_413_pfltWeight_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        fltWeight_address0 = grp_bgd_func2_fu_403_pfltWeight_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        fltWeight_address0 = grp_bgd_func4_fu_393_pfltWeight_address0;
    end else begin
        fltWeight_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fltWeight_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fltWeight_ce0 = grp_bgd_func0_fu_433_pfltWeight_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fltWeight_ce0 = grp_bgd_func1_fu_423_pfltWeight_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fltWeight_ce0 = grp_bgd_func3_fu_413_pfltWeight_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        fltWeight_ce0 = grp_bgd_func2_fu_403_pfltWeight_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        fltWeight_ce0 = grp_bgd_func4_fu_393_pfltWeight_ce0;
    end else begin
        fltWeight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln397_reg_756 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fltWeight_we0 = 1'b1;
    end else begin
        fltWeight_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        valData_0_ack_out = 1'b1;
    end else begin
        valData_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((valData_0_sel == 1'b1)) begin
        valData_0_data_out = valData_0_payload_B;
    end else begin
        valData_0_data_out = valData_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln424_reg_799 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        valData_TDATA_blk_n = valData_0_state[1'd0];
    end else begin
        valData_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((valGradient_1_sel == 1'b1)) begin
        valGradient_1_data_out = valGradient_1_payload_B;
    end else begin
        valGradient_1_data_out = valGradient_1_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln461_reg_903_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        valGradient_1_vld_in = 1'b1;
    end else begin
        valGradient_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln461_reg_903_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((icmp_ln461_reg_903_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        valGradient_TDATA_blk_n = valGradient_1_state[1'd1];
    end else begin
        valGradient_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln397_fu_453_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        valWeight_0_ack_out = 1'b1;
    end else begin
        valWeight_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((valWeight_0_sel == 1'b1)) begin
        valWeight_0_data_out = valWeight_0_payload_B;
    end else begin
        valWeight_0_data_out = valWeight_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln397_fu_453_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        valWeight_TDATA_blk_n = valWeight_0_state[1'd0];
    end else begin
        valWeight_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln397_fu_453_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln397_fu_453_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln421_fu_512_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln424_fu_524_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((icmp_ln424_fu_524_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln448_fu_628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_bgd_func0_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_bgd_func1_fu_423_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_bgd_func2_fu_403_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_bgd_func3_fu_413_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_bgd_func4_fu_393_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln461_fu_684_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((icmp_ln461_fu_684_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            if ((~((valGradient_1_state == 2'd1) | ((valGradient_1_state == 2'd3) & (valGradient_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln439_1_fu_573_p2 = (zext_ln439_2_fu_569_p1 + 12'd785);

assign add_ln439_2_fu_587_p2 = (zext_ln439_2_reg_835 + 12'd1570);

assign add_ln439_3_fu_597_p2 = (zext_ln439_1_fu_584_p1 + 13'd2355);

assign add_ln439_4_fu_613_p2 = (zext_ln439_1_reg_840 + 13'd3140);

assign add_ln439_fu_559_p2 = ($signed(trunc_ln435_reg_815) + $signed(11'd2038));

assign add_ln451_fu_634_p2 = (cla_0_reg_348 + 4'd1);

assign add_ln453_fu_645_p2 = (cla_0_reg_348 + 4'd2);

assign add_ln454_fu_656_p2 = (cla_0_reg_348 + 4'd3);

assign add_ln455_fu_667_p2 = (cla_0_reg_348 + 4'd4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln397_fu_453_p2 == 1'd0) & (valWeight_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln397_fu_453_p2 == 1'd0) & (valWeight_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_11001 = ((icmp_ln424_reg_799 == 1'd0) & (valData_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = ((icmp_ln424_reg_799 == 1'd0) & (valData_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = (((1'b1 == ap_block_state25_io) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((1'b1 == ap_block_state24_io) & (ap_enable_reg_pp2_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = (((1'b1 == ap_block_state25_io) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((1'b1 == ap_block_state24_io) & (ap_enable_reg_pp2_iter2 == 1'b1)));
end

assign ap_block_state22_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_io = ((icmp_ln461_reg_903_pp2_iter1_reg == 1'd0) & (valGradient_1_ack_in == 1'b0));
end

assign ap_block_state24_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_io = ((icmp_ln461_reg_903_pp2_iter2_reg == 1'd0) & (valGradient_1_ack_in == 1'b0));
end

assign ap_block_state25_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26 = ((valGradient_1_state == 2'd1) | ((valGradient_1_state == 2'd3) & (valGradient_TREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((icmp_ln397_fu_453_p2 == 1'd0) & (valWeight_0_vld_out == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage1_iter0 = ((icmp_ln424_reg_799 == 1'd0) & (valData_0_vld_out == 1'b0));
end

assign ap_block_state8_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ch_fu_518_p2 = (ch_0_reg_315 + 12'd1);

assign cla_fu_678_p2 = (cla_0_reg_348 + 4'd5);

assign grp_bgd_func0_fu_433_ap_start = grp_bgd_func0_fu_433_ap_start_reg;

assign grp_bgd_func1_fu_423_ap_start = grp_bgd_func1_fu_423_ap_start_reg;

assign grp_bgd_func2_fu_403_ap_start = grp_bgd_func2_fu_403_ap_start_reg;

assign grp_bgd_func3_fu_413_ap_start = grp_bgd_func3_fu_413_ap_start_reg;

assign grp_bgd_func4_fu_393_ap_start = grp_bgd_func4_fu_393_ap_start_reg;

assign grp_fu_742_p0 = 14'd785;

assign grp_fu_749_p0 = 14'd785;

assign i_1_fu_702_p2 = (32'd1 + ap_phi_mux_i5_0_phi_fu_375_p4);

assign i_fu_471_p2 = (32'd1 + ap_phi_mux_i_0_phi_fu_297_p4);

assign icmp_ln397_fu_453_p2 = ((loop_0_reg_304 == 13'd7850) ? 1'b1 : 1'b0);

assign icmp_ln401_fu_465_p2 = ((j_0_reg_282 == 32'd785) ? 1'b1 : 1'b0);

assign icmp_ln421_fu_512_p2 = ((ch_0_reg_315 == 12'd4000) ? 1'b1 : 1'b0);

assign icmp_ln424_fu_524_p2 = ((ap_phi_mux_loop1_0_phi_fu_341_p4 == 10'd795) ? 1'b1 : 1'b0);

assign icmp_ln430_fu_536_p2 = ((ap_phi_mux_j3_0_phi_fu_330_p4 == 32'd795) ? 1'b1 : 1'b0);

assign icmp_ln436_fu_554_p2 = ((select_ln430_reg_808 > 32'd9) ? 1'b1 : 1'b0);

assign icmp_ln448_fu_628_p2 = ((cla_0_reg_348 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln461_fu_684_p2 = ((loop4_0_reg_360 == 13'd7850) ? 1'b1 : 1'b0);

assign icmp_ln465_fu_696_p2 = ((j6_0_reg_382 == 32'd785) ? 1'b1 : 1'b0);

assign j_1_fu_732_p2 = (32'd1 + select_ln465_1_fu_720_p3);

assign j_2_fu_608_p2 = (select_ln430_reg_808 + 32'd1);

assign j_fu_501_p2 = (32'd1 + select_ln401_fu_477_p3);

assign loop_1_fu_690_p2 = (loop4_0_reg_360 + 13'd1);

assign loop_2_fu_530_p2 = (ap_phi_mux_loop1_0_phi_fu_341_p4 + 10'd1);

assign loop_fu_459_p2 = (loop_0_reg_304 + 13'd1);

assign select_ln401_1_fu_489_p3 = ((icmp_ln401_fu_465_p2[0:0] === 1'b1) ? i_fu_471_p2 : ap_phi_mux_i_0_phi_fu_297_p4);

assign select_ln401_fu_477_p3 = ((icmp_ln401_fu_465_p2[0:0] === 1'b1) ? 32'd0 : j_0_reg_282);

assign select_ln430_fu_542_p3 = ((icmp_ln430_fu_536_p2[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_j3_0_phi_fu_330_p4);

assign select_ln465_1_fu_720_p3 = ((icmp_ln465_fu_696_p2[0:0] === 1'b1) ? 32'd0 : j6_0_reg_382);

assign select_ln465_fu_708_p3 = ((icmp_ln465_fu_696_p2[0:0] === 1'b1) ? i_1_fu_702_p2 : ap_phi_mux_i5_0_phi_fu_375_p4);

assign sext_ln439_1_fu_618_p1 = $signed(add_ln439_4_fu_613_p2);

assign sext_ln439_fu_603_p1 = $signed(add_ln439_3_fu_597_p2);

assign trunc_ln401_fu_485_p1 = select_ln401_fu_477_p3[13:0];

assign trunc_ln409_fu_497_p1 = select_ln401_1_fu_489_p3[13:0];

assign trunc_ln435_fu_550_p1 = select_ln430_fu_542_p3[10:0];

assign trunc_ln472_1_fu_728_p1 = select_ln465_1_fu_720_p3[13:0];

assign trunc_ln472_fu_716_p1 = select_ln465_fu_708_p3[13:0];

assign valData_0_ack_in = valData_0_state[1'd1];

assign valData_0_load_A = (valData_0_state_cmp_full & ~valData_0_sel_wr);

assign valData_0_load_B = (valData_0_state_cmp_full & valData_0_sel_wr);

assign valData_0_sel = valData_0_sel_rd;

assign valData_0_state_cmp_full = ((valData_0_state != 2'd1) ? 1'b1 : 1'b0);

assign valData_0_vld_in = valData_TVALID;

assign valData_0_vld_out = valData_0_state[1'd0];

assign valData_TREADY = valData_0_state[1'd1];

assign valGradient_1_ack_in = valGradient_1_state[1'd1];

assign valGradient_1_ack_out = valGradient_TREADY;

assign valGradient_1_load_A = (valGradient_1_state_cmp_full & ~valGradient_1_sel_wr);

assign valGradient_1_load_B = (valGradient_1_state_cmp_full & valGradient_1_sel_wr);

assign valGradient_1_sel = valGradient_1_sel_rd;

assign valGradient_1_state_cmp_full = ((valGradient_1_state != 2'd1) ? 1'b1 : 1'b0);

assign valGradient_1_vld_out = valGradient_1_state[1'd0];

assign valGradient_TDATA = valGradient_1_data_out;

assign valGradient_TVALID = valGradient_1_state[1'd0];

assign valWeight_0_ack_in = valWeight_0_state[1'd1];

assign valWeight_0_load_A = (valWeight_0_state_cmp_full & ~valWeight_0_sel_wr);

assign valWeight_0_load_B = (valWeight_0_state_cmp_full & valWeight_0_sel_wr);

assign valWeight_0_sel = valWeight_0_sel_rd;

assign valWeight_0_state_cmp_full = ((valWeight_0_state != 2'd1) ? 1'b1 : 1'b0);

assign valWeight_0_vld_in = valWeight_TVALID;

assign valWeight_0_vld_out = valWeight_0_state[1'd0];

assign valWeight_TREADY = valWeight_0_state[1'd1];

assign zext_ln409_fu_507_p1 = $unsigned(grp_fu_742_p3);

assign zext_ln439_1_fu_584_p1 = add_ln439_reg_830;

assign zext_ln439_2_fu_569_p1 = add_ln439_fu_559_p2;

assign zext_ln439_3_fu_579_p1 = add_ln439_1_fu_573_p2;

assign zext_ln439_4_fu_592_p1 = add_ln439_2_fu_587_p2;

assign zext_ln439_fu_564_p1 = add_ln439_fu_559_p2;

assign zext_ln448_fu_623_p1 = cla_0_reg_348;

assign zext_ln451_fu_640_p1 = add_ln451_fu_634_p2;

assign zext_ln453_fu_651_p1 = add_ln453_fu_645_p2;

assign zext_ln454_fu_662_p1 = add_ln454_fu_656_p2;

assign zext_ln455_fu_673_p1 = add_ln455_fu_667_p2;

assign zext_ln472_fu_738_p1 = $unsigned(grp_fu_749_p3);

always @ (posedge ap_clk) begin
    zext_ln439_2_reg_835[11] <= 1'b0;
    zext_ln439_1_reg_840[12:11] <= 2'b00;
end

endmodule //a4_bgd_accel
